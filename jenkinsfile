pipeline {
    agent any

    environment {
        // Définir les variables pour Docker Hub
        DOCKERHUB_CREDENTIALS ='DockerHubID'
        IMAGE_NAME = 'mickael26t/monsitehtml'
    }

    stages {
        stage('Cloning Git') {
            steps {
                // Cloner le dépôt Git
                git url: 'https://github.com/mickaeltabo/DevOps.git', branch: 'master'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                // Construire l'image Docker
                script {
                    docker.build("${IMAGE_NAME}")
                }
            }
        }
        
        stage('Push Image to Docker Hub') {
            steps {
                // Se connecter à Docker Hub
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKERHUB_CREDENTIALS}") {
                        // Pousser l'image sur Docker Hub
                        docker.image("${IMAGE_NAME}").push()
                    }
                }
            }
        }
        stage('SonarQube Analysis') {
                    steps {
                        withSonarQubeEnv('Sonar-Server') {
                            script {
                                def scannerHome = tool 'SonarScanner';
                                sh "${scannerHome}/bin/sonar-scanner \
                                    -Dsonar.projectKey=crypto \
                                    -Dsonar.sources=."
                            }
                        }
                    }
                }

    }
}
